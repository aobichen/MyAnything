@model Anything.Models.Hotel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@Scripts.Render("~/Scripts/tinymce/tinymce.min.js");
<script type="text/javascript">
    tinymce.init({ selector: '#Information',height:"400" });
</script>

<style type="text/css">
    textarea {
        height: 100px;
        width: 100%;
    }
</style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>HotelCreateViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.UserId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Partial("_Locations")
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Partial("_TaiwanSelectList")
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @placeholder = "高雄市苓雅區自強三路3號12樓", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tel, new { htmlAttributes = new { @placeholder = "高雄市苓雅區自強三路3號12樓", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WebSite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WebSite, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WebSite, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Introduce, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Introduce, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Introduce, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Feature, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Feature, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Feature, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Information, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Information, new { htmlAttributes = new { @class = "form-control infomation", @id = "Information" } })
                @Html.ValidationMessageFor(model => model.Information, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceOptions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 options">
                @{
                    if (ViewBag.ServiceOptions != null)
                    {
                        foreach (var item in (List<Anything.ViewModels.ServiceOptionCheckbox>)ViewBag.ServiceOptions)
                        {
                            <div class="col-md-2">
                                <div class="checkbox">
                                    <label><input name="ServiceOptions" type="checkbox" checked="@item.Checked" value="@item.ID" />@item.Text</label>
                                </div>


                            </div>
                        }
                    }
                }


                @Html.ValidationMessageFor(model => model.ServiceOptions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Scenics, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    if (ViewBag.Scenics != null)
                    {
                        foreach (var item in (List<Anything.ViewModels.ScenicsCheckbox>)ViewBag.Scenics)
                        {
                            <div class="col-md-2 @item.City">
                                <div class="checkbox">
                                    <label><input name="Scenics" type="checkbox" value="@item.ID" checked="@item.Checked" />@item.Name</label>
                                </div>
                            </div>
                        }
                    }
                }
                @Html.ValidationMessageFor(model => model.Scenics, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Enabled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Enabled)
                    @Html.ValidationMessageFor(model => model.Enabled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Enabled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.Partial("_ImageUpload")
                    @Html.ValidationMessageFor(model => model.Enabled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
