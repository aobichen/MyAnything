@model Anything.ViewModels.RoomCreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
@Scripts.Render("~/Scripts/tinymce/tinymce.min.js");
<script type="text/javascript">
    tinymce.init({ selector: '#Information',height:"400" });
</script>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.HotelId)
    <div class="form-horizontal">
        <h4>RoomCreateViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Person",(SelectList)ViewBag.RoomType)
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="form-group">
                    @Html.DropDownList("BedType", Model.BedType)
                    <select name="Beds">
                        @for (var i = 1; i <= 4; i++)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
           
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SellPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SellPrice, new { @Value = "", @placeholder = "4000", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SellPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiscountPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DiscountPrice, new { @Value = "",@placeholder="2500", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DiscountPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Bonus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Bonus,new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Bonus, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            
            <div class="col-md-2"></div>
            <div class="col-md-10">
                <label id="AllPay">交易手續費3.5%:<span></span></label>
                <label id="Bussiness">消費紅利5%:<span></span></label>
                <label id="Platform">平台收取5%:<span></span></label>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Amount, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Information, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Information, new { @class = "form-control",@id="Information" })
                @Html.ValidationMessageFor(model => model.Information, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Enabled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Enabled)
                    @Html.ValidationMessageFor(model => model.Enabled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Enabled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.Partial("_RoomImageUpload")
                    @Html.ValidationMessageFor(model => model.Enabled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">
    jQuery(function () {
        let $SellPrice = $('#SellPrice'),
            $DiscountPrice = $('#DiscountPrice'),
            $AllPay = $('span', '#AllPay'), 
            $Bussiness = $('span', '#Bussiness'),
            $Platform = $('span', '#Platform');

        let allpay = 3.5/100,
            bussiness = 5/100
        platform = 5/100;

        $SellPrice.on('change', function () {
            RatetDasplay();
        });
        $DiscountPrice.on('change', function () {
            RatetDasplay();
        })

        function RatetDasplay() {
            if ($SellPrice.val() != "" && $DiscountPrice.val() != "") {
                var price = parseInt($DiscountPrice.val());
                $AllPay.text(Math.round(price * allpay));
                $Bussiness.text(Math.round(price * bussiness));
                $Platform.text(Math.round(price * platform));
            } else if ($SellPrice.val() == "" && $DiscountPrice.val() != "") {
                var price = parseInt($DiscountPrice.val());
                $AllPay.text(Math.round(price * allpay));
                $Bussiness.text(Math.round(price * bussiness));
                $Platform.text(Math.round(price * platform));
            } else if ($SellPrice.val() != "" && $DiscountPrice.val() == "") {
                
                var price = parseInt($SellPrice.val());
                $AllPay.text(Math.round(price * allpay));
                $Bussiness.text(Math.round(price * bussiness));
                $Platform.text(Math.round(price * platform));
            }
        }

    })
</script>
